// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Vladlen Tereshchenko",
            "url": "https://github.com/VladlenT",
            "email": "vladlent.dev@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Get all categories",
                "operationId": "category-all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/category.DTO"
                            }
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Create new category. Requires admin rights.",
                "operationId": "category-create",
                "parameters": [
                    {
                        "description": "Category DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category.DTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/category.DTO"
                        }
                    },
                    "409": {
                        "description": ""
                    },
                    "422": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/categories/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Find category by id",
                "operationId": "category-find",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/category.DTO"
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Replace category. Requires admin rights.",
                "operationId": "category-update",
                "parameters": [
                    {
                        "description": "Category DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category.DTO"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/category.DTO"
                        }
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Delete category by id. Requires admin rights.",
                "operationId": "category-delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/category.DTO"
                        }
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/categories/:id/upload": {
            "patch": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Upload image for category. Requires admin rights.",
                "operationId": "category-upload",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Category image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link to uploaded image",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "413": {
                        "description": ""
                    },
                    "415": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/dishes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Get all dishes",
                "operationId": "dish-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "filter dishes by category id",
                        "name": "cid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dish.DTO"
                            }
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Create new dish. Requires admin rights.",
                "operationId": "dish-create",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dish.DTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dish.DTO"
                        }
                    },
                    "409": {
                        "description": ""
                    },
                    "422": {
                        "description": ""
                    }
                }
            }
        },
        "/dishes/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Find dish by id",
                "operationId": "dish-find",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dish id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dish.DTO"
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Replace dish. Requires admin rights.",
                "operationId": "dish-update",
                "parameters": [
                    {
                        "description": "Dish DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dish.DTO"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Dish id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dish.DTO"
                        }
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "409": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Delete dish by id. Requires admin rights.",
                "operationId": "dish-delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dish id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dish.DTO"
                        }
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/dishes/:id/upload": {
            "patch": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Upload image for dish. Requires admin rights.",
                "operationId": "dish-upload",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dish id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Dish image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link to uploaded image",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "413": {
                        "description": ""
                    },
                    "415": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "If requester is admin, it returns all orders. Otherwise, it returns orders only for that user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get all orders. Requires auth.",
                "operationId": "order-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "0-based page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "amount of entries per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order.DTOsWithPagination"
                        }
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Create new order. Requires auth.",
                "operationId": "order-create",
                "parameters": [
                    {
                        "description": "Create order DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.CreateDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/order.ResponseDTO"
                        }
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "422": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/orders/:id": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Replace order. Requires admin rights.",
                "operationId": "order-update",
                "parameters": [
                    {
                        "description": "Order update DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.UpdateDTO"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order.ResponseDTO"
                        }
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "tags": [
                    "order"
                ],
                "summary": "Patch order. Requires admin rights.",
                "operationId": "order-patch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "New order status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all users. Requires admin rights.",
                "operationId": "user-get-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "0-based page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "amount of entries per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.DTOsWithPagination"
                        }
                    },
                    "401": {
                        "description": ""
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logout. Requires auth.",
                "operationId": "user-logout",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get info about current user. Requires auth.",
                "operationId": "user-info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseDTO"
                        }
                    },
                    "401": {
                        "description": ""
                    }
                }
            }
        },
        "/users/signin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Sign in",
                "operationId": "user-login",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.AuthDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/users/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create new user",
                "operationId": "user-create",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.AuthDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseDTO"
                        }
                    },
                    "409": {
                        "description": ""
                    },
                    "422": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "category.DTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "removable": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "common.PaginationDTO": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dish.DTO": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/category.DTO"
                },
                "category_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "removable": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "order.CreateDTO": {
            "type": "object",
            "required": [
                "items"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.ItemCreateDTO"
                    }
                }
            }
        },
        "order.DTOsWithPagination": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.ResponseDTO"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/common.PaginationDTO"
                }
            }
        },
        "order.ItemCreateDTO": {
            "type": "object",
            "required": [
                "id",
                "quantity"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "order.ItemResponseDTO": {
            "type": "object",
            "properties": {
                "dish": {
                    "$ref": "#/definitions/dish.DTO"
                },
                "dish_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "order.ResponseDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.ItemResponseDTO"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/user.ResponseDTO"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "order.UpdateDTO": {
            "type": "object",
            "required": [
                "items",
                "status",
                "total",
                "user_id"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.ItemCreateDTO"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "user.AuthDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.DTOsWithPagination": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/common.PaginationDTO"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.ResponseDTO"
                    }
                }
            }
        },
        "user.ResponseDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{"http"},
	Title:       "Food Ordering Backend",
	Description: "Golang backend for Food Ordering portfolio app.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
